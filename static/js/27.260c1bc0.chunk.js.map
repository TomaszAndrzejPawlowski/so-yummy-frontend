{"version":3,"file":"static/js/27.260c1bc0.chunk.js","mappings":"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","sources":["webpack://so-yummy-frontend/./src/pages/Home/components/ChooseYourBreakfast/ChooseYourBreakfast.module.css?6bf0","pages/Home/components/ChooseYourBreakfast/ChooseYourBreakfast.jsx","pages/Home/components/PreviewCategories/PreviewCategories.jsx","pages/Home/MainPage.jsx","pages/Home/components/Search/Search.jsx","redux/recipes/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"swirlArrow__svg\":\"ChooseYourBreakfast_swirlArrow__svg__taHLX\"};","import { NavLink } from \"react-router-dom\";\nimport BreakfastDish from \"../../../../img/breakfast-dish.png\";\nimport icons from \"../../../../img/svg/iconsSprite.svg\";\nimport css from \"./ChooseYourBreakfast.module.css\";\n\nconst ChooseYourBreakfast = () => {\n  return (\n    <div>\n      <div>\n        <img src={BreakfastDish} alt=\"Display breakfast dish\" />\n      </div>\n      <div>\n        <p>\n          <span>Delicious and healthy</span> way to enjoy a variety of fresh\n          ingredients in one satisfying meal\n        </p>\n        <NavLink to=\"/categories/Breakfast\">See recipes &rarr;</NavLink>\n      </div>\n      <svg className={css.swirlArrow__svg}>\n        <use href={`${icons}#icon-swirlArrow`}></use>\n      </svg>\n    </div>\n  );\n};\n\nexport default ChooseYourBreakfast;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRecipesForMainPage } from \"../../../../redux/recipes/operations\";\nimport { selectRecipesForMainPage } from \"../../../../redux/recipes/selectors\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst randomizeRecipes = (recipes) => {\n  const newRecipesArray = recipes.slice();\n  for (let i = newRecipesArray.length - 1; i > 0; i--) {\n    const random = Math.floor(Math.random() * (i + i));\n    [newRecipesArray[i], newRecipesArray[random]] = [\n      newRecipesArray[random],\n      newRecipesArray[i],\n    ];\n  }\n  return newRecipesArray;\n};\n\nconst getRandomRecipes = (recipesArr, n) => {\n  const randomized = randomizeRecipes(recipesArr);\n  return randomized.slice(0, n);\n};\n\nconst PreviewCategories = () => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const recipesForMainPage = useSelector(selectRecipesForMainPage);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await dispatch(fetchRecipesForMainPage());\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [dispatch]);\n\n  const getRandomRecipesByCategory = (recipes, category, count) => {\n    const filteredRecipes = recipes.filter(\n      (recipe) => recipe.category === category\n    );\n    return getRandomRecipes(filteredRecipes, count);\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  const dessertRecipes = getRandomRecipesByCategory(\n    recipesForMainPage,\n    \"Dessert\",\n    4\n  );\n  const breakfastRecipes = getRandomRecipesByCategory(\n    recipesForMainPage,\n    \"Breakfast\",\n    4\n  );\n  const miscellaneousRecipes = getRandomRecipesByCategory(\n    recipesForMainPage,\n    \"Miscellaneous\",\n    4\n  );\n  const chickenRecipes = getRandomRecipesByCategory(\n    recipesForMainPage,\n    \"Chicken\",\n    4\n  );\n\n  return (\n    <>\n      <ul>\n        <li key={nanoid()}>\n          <h3>Breakfast</h3>\n        </li>\n        {breakfastRecipes.map((recipe) =>\n          recipe ? (\n            <li key={nanoid()}>\n              <NavLink to={`/recipe/${recipe._id}`}>\n                <figure>\n                  <img src={recipe.preview} alt={`${recipe.title}`} />\n                  <figcaption>{`${recipe.title}`}</figcaption>\n                </figure>\n              </NavLink>\n            </li>\n          ) : (\n            <></>\n          )\n        )}\n        <li key={nanoid()}>\n          <NavLink to=\"/categories/Breakfast\">See all</NavLink>\n        </li>\n      </ul>\n      <ul>\n        <li key={nanoid()}>\n          <h3>Miscellaneous</h3>\n        </li>\n        {miscellaneousRecipes.map((recipe) =>\n          recipe ? (\n            <li key={nanoid()}>\n              <NavLink to=\"\">\n                <img src={recipe.preview} alt={`${recipe.title}`} />\n                <div>{`${recipe.title}`}</div>\n              </NavLink>\n            </li>\n          ) : (\n            <></>\n          )\n        )}\n        <li key={nanoid()}>\n          <NavLink to=\"/categories/Miscellaneous\">See all</NavLink>\n        </li>\n      </ul>\n      <ul>\n        <li key={nanoid()}>\n          <h3>Chicken</h3>\n        </li>\n        {chickenRecipes.map((recipe) =>\n          recipe ? (\n            <li key={nanoid()}>\n              <NavLink to=\"\">\n                <img src={recipe.preview} alt={`${recipe.title}`} />\n                <div>{`${recipe.title}`}</div>\n              </NavLink>\n            </li>\n          ) : (\n            <></>\n          )\n        )}\n        <li key={nanoid()}>\n          <NavLink to=\"/categories/Chicken\">See all</NavLink>\n        </li>\n      </ul>\n      <ul>\n        <li key={nanoid()}>\n          <h3>Dessert</h3>\n        </li>\n        {dessertRecipes.map((recipe) =>\n          recipe ? (\n            <li key={nanoid()}>\n              <NavLink to=\"\">\n                <img src={recipe.preview} alt={`${recipe.title}`} />\n                <div>{`${recipe.title}`}</div>\n              </NavLink>\n            </li>\n          ) : (\n            <></>\n          )\n        )}\n        <li key={nanoid()}>\n          <NavLink to=\"/categories/Dessert\">See all</NavLink>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default PreviewCategories;\n","import { Helmet } from \"react-helmet\";\nimport Search from \"./components/Search/Search\";\nimport ChooseYourBreakfast from \"./components/ChooseYourBreakfast/ChooseYourBreakfast\";\nimport PreviewCategories from \"./components/PreviewCategories/PreviewCategories\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  fetchCategories,\n  fetchIngredientsList,\n  fetchRecipesForMainPage,\n} from \"../../redux/recipes/operations\";\nimport { useEffect } from \"react\";\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      await dispatch(fetchRecipesForMainPage());\n      await dispatch(fetchCategories());\n      await dispatch(fetchIngredientsList());\n\n      console.log(\"działa\");\n    };\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <main>\n      <Helmet>\n        <title>Main</title>\n      </Helmet>\n      <div>\n        <h1>\n          <span>So</span>Yummy\n        </h1>\n        <p>\n          \"What to cook?\" is not only a recipe app, it is, in fact, your\n          cookbook. You can add your own recipes to save them for the future.\n        </p>\n        <Search />\n      </div>\n      <ChooseYourBreakfast />\n      <PreviewCategories />\n    </main>\n  );\n};\n\nexport default MainPage;\n","import { useDispatch } from \"react-redux\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchByTitle } from \"../../../../redux/recipes/operations\";\n\nconst Search = () => {\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\n  const dispatch = useDispatch();\n  console.log(urlSearchParams);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUrlSearchParams({ query: e.target.elements.input.value });\n    dispatch(searchByTitle(e.target.elements.input.value));\n  };\n\n  return (\n    <div>\n      <form>\n        <input type=\"text\" name=\"input\" placeholder=\"Recipe name\" required />\n        <button type=\"submit\" onSubmit={handleSubmit}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","export const selectCategories = (state) => state.recipes.categories;\nexport const selectRecipesForMainPage = (state) =>\n  state.recipes.mainPageRecipes;\nexport const selectRecipesByCategory = (state) =>\n  state.recipes.recipesByCategory;\nexport const selectIngredients = (state) => state.recipes.ingredients;\nexport const selectPopularRecipes = (state) => state.recipes.popularRecipes;\nexport const selectIsLoading = (state) => state.recipes.isLoading;\nexport const selectRecipeById = (state) => state.recipes.recipeById;\nexport const selectSearchedRecipesByTitle = (state) =>\n  state.recipes.recipesSearchedByTitle;\nexport const selectSearchedRecipesByIngredients = (state) =>\n  state.recipes.recipesSearchedByIngredient;\n"],"names":["ChooseYourBreakfast","_jsxs","children","_jsx","src","BreakfastDish","alt","NavLink","to","className","css","href","concat","icons","getRandomRecipes","recipesArr","n","recipes","newRecipesArray","slice","i","length","random","Math","floor","randomizeRecipes","PreviewCategories","dispatch","useDispatch","isLoading","setIsLoading","useState","recipesForMainPage","useSelector","selectRecipesForMainPage","useEffect","async","fetchRecipesForMainPage","fetchData","getRandomRecipesByCategory","category","count","filteredRecipes","filter","recipe","dessertRecipes","breakfastRecipes","miscellaneousRecipes","chickenRecipes","_Fragment","nanoid","map","_id","preview","title","MainPage","fetchCategories","fetchIngredientsList","console","log","Helmet","Search","urlSearchParams","setUrlSearchParams","useSearchParams","type","name","placeholder","required","onSubmit","e","preventDefault","query","target","elements","input","value","searchByTitle","selectCategories","state","categories","mainPageRecipes","selectRecipesByCategory","recipesByCategory","selectIngredients","ingredients","selectPopularRecipes","popularRecipes","selectIsLoading","selectRecipeById","recipeById"],"sourceRoot":""}