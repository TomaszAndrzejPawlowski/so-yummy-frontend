{"version":3,"file":"static/js/533.ea0189d5.chunk.js","mappings":"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","sources":["components/MainPageTitle/MainPageTitle.jsx","pages/RecipePage/components/RecipeIngredientsList/RecipeIngredientsList.jsx","webpack://so-yummy-frontend/./src/pages/RecipePage/components/RecipePageHero/RecipePageHero.module.css?44fd","pages/RecipePage/components/RecipePageHero/RecipePageHero.jsx","pages/RecipePage/components/RecipePreparation/RecipePreparation.jsx","pages/RecipePage/RecipePage.jsx","redux/recipes/selectors.js"],"sourcesContent":["const MainPageTitle = ({ title }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n    </>\n  );\n};\n\nexport default MainPageTitle;\n","import { useDispatch } from \"react-redux\";\nimport { addIngredientToShoppingList } from \"../../../../redux/user/operations\";\n\nconst RecipeIngredientsList = ({ recipeIngredients, ingredientList }) => {\n  const dispatch = useDispatch();\n\n  const ingredientsListToDisplay = recipeIngredients\n    .map((recipeIngredient) => {\n      const foundIngredient = ingredientList.find(\n        (ingredient) => ingredient._id === recipeIngredient.id\n      );\n      if (foundIngredient) {\n        return {\n          ...foundIngredient,\n          measure: recipeIngredient.measure,\n        };\n      }\n      return null;\n    })\n    .filter((item) => item !== null);\n\n  const handleAddToShoppingList = (ingredient, e) => {\n    e.preventDefault();\n    dispatch(addIngredientToShoppingList(ingredient));\n  };\n\n  return (\n    <>\n      <div>\n        <p>Ingredients</p>\n        <p>Number</p>\n        <p>Add to list</p>\n      </div>\n      <ul>\n        {ingredientsListToDisplay.map((ingredient) => {\n          return (\n            <li key={ingredient._id}>\n              <img src={ingredient.thb} alt={ingredient.ttl} />\n              <p>{ingredient.ttl}</p>\n              <p>{ingredient.measure}</p>\n              <input\n                type=\"checkbox\"\n                onChange={(e) =>\n                  handleAddToShoppingList(\n                    {\n                      id: ingredient._id,\n                      thb: ingredient.thb,\n                      ttl: ingredient.ttl,\n                      measure: ingredient.measure,\n                    },\n                    e\n                  )\n                }\n              ></input>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default RecipeIngredientsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"clock__svg\":\"RecipePageHero_clock__svg__Q4RRu\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport MainPageTitle from \"../../../../components/MainPageTitle/MainPageTitle\";\nimport { selectUserFavRecipes } from \"../../../../redux/user/selectors\";\nimport icons from \"../../../../img/svg/iconsSprite.svg\";\nimport css from \"./RecipePageHero.module.css\";\nimport {\n  addRecipeToFav,\n  removeRecipeFromFav,\n} from \"../../../../redux/user/operations\";\nimport { selectIsLoading } from \"../../../../redux/recipes/selectors\";\n\nconst RecipePageHero = ({ id, title, description, time }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const userFavRecipes = useSelector(selectUserFavRecipes);\n\n  const handleRemoveFavRecipe = (e) => {\n    e.preventDefault();\n    dispatch(removeRecipeFromFav({ id }));\n  };\n\n  const handleAddFavRecipe = (e) => {\n    e.preventDefault();\n    dispatch(addRecipeToFav({ id }));\n  };\n\n  return isLoading ? (\n    <>Loading...</>\n  ) : (\n    <>\n      <MainPageTitle title={title} />\n      <p>{description}</p>\n      {userFavRecipes.includes(id) ? (\n        <button type=\"button\" onClick={handleRemoveFavRecipe}>\n          Remove from favorite recipes\n        </button>\n      ) : (\n        <button type=\"button\" onClick={handleAddFavRecipe}>\n          Add to favorite recipes\n        </button>\n      )}\n      <p>\n        <svg className={css.clock__svg}>\n          <use href={`${icons}#icon-clock`}></use>\n        </svg>\n        {time} min\n      </p>\n    </>\n  );\n};\n\nexport default RecipePageHero;\n","const RecipePreparation = ({ title, instructions, preview }) => {\n  const steps = instructions.split(\"\\r\\n\").filter((step) => step.trim() !== \"\");\n\n  return (\n    <>\n      <ul>\n        <li>\n          <h3>Recipe Preparation</h3>\n        </li>\n        <li>\n          {steps.map((step, index) => (\n            <p key={index}>\n              {index + 1}. {step}\n            </p>\n          ))}\n        </li>\n        <li>\n          <img src={preview} alt={title} />\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default RecipePreparation;\n","import { useParams } from \"react-router-dom\";\nimport RecipeIngredientsList from \"./components/RecipeIngredientsList/RecipeIngredientsList\";\nimport RecipePageHero from \"./components/RecipePageHero/RecipePageHero\";\nimport RecipePreparation from \"./components/RecipePreparation/RecipePreparation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectIngredients,\n  // selectIsLoading,\n  selectRecipeById,\n} from \"../../redux/recipes/selectors\";\nimport { useEffect } from \"react\";\nimport {\n  fetchIngredientsList,\n  fetchRecipeById,\n} from \"../../redux/recipes/operations\";\nimport { Helmet } from \"react-helmet\";\n\nconst RecipePage = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  // const isLoading = useSelector(selectIsLoading);\n  const recipeById = useSelector(selectRecipeById);\n  const ingredientList = useSelector(selectIngredients);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await dispatch(fetchRecipeById(id));\n      await dispatch(fetchIngredientsList());\n    };\n    fetchData();\n  }, [dispatch, id]);\n\n  if (recipeById) {\n    return (\n      <>\n        <Helmet>\n          <title>Recipe</title>\n        </Helmet>\n        <RecipePageHero\n          id={id}\n          title={recipeById.title}\n          description={recipeById.description}\n          time={recipeById.time}\n        />\n        <RecipeIngredientsList\n          recipeIngredients={recipeById.ingredients}\n          ingredientList={ingredientList}\n        />\n        <RecipePreparation\n          title={recipeById.title}\n          instructions={recipeById.instructions}\n          preview={recipeById.preview}\n        />\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport default RecipePage;\n","export const selectCategories = (state) => state.recipes.categories;\nexport const selectRecipesForMainPage = (state) =>\n  state.recipes.mainPageRecipes;\nexport const selectRecipesByCategory = (state) =>\n  state.recipes.recipesByCategory;\nexport const selectIngredients = (state) => state.recipes.ingredients;\nexport const selectPopularRecipes = (state) => state.recipes.popularRecipes;\nexport const selectIsLoading = (state) => state.recipes.isLoading;\nexport const selectRecipeById = (state) => state.recipes.recipeById;\nexport const selectSearchedRecipesByTitle = (state) =>\n  state.recipes.recipesSearchedByTitle;\nexport const selectSearchedRecipesByIngredients = (state) =>\n  state.recipes.recipesSearchedByIngredient;\n"],"names":["_ref","title","_jsx","_Fragment","children","recipeIngredients","ingredientList","dispatch","useDispatch","ingredientsListToDisplay","map","recipeIngredient","foundIngredient","find","ingredient","_id","id","measure","filter","item","_jsxs","src","thb","alt","ttl","type","onChange","e","handleAddToShoppingList","preventDefault","addIngredientToShoppingList","description","time","isLoading","useSelector","selectIsLoading","userFavRecipes","selectUserFavRecipes","MainPageTitle","includes","onClick","removeRecipeFromFav","addRecipeToFav","className","css","href","concat","icons","instructions","preview","steps","split","step","trim","index","RecipePage","useParams","recipeById","selectRecipeById","selectIngredients","useEffect","async","fetchRecipeById","fetchIngredientsList","fetchData","Helmet","RecipePageHero","RecipeIngredientsList","ingredients","RecipePreparation","selectCategories","state","recipes","categories","selectRecipesForMainPage","mainPageRecipes","selectRecipesByCategory","recipesByCategory","selectPopularRecipes","popularRecipes"],"sourceRoot":""}