{"version":3,"file":"static/js/813.b3182f9a.chunk.js","mappings":"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","sources":["components/MainPageTitle/MainPageTitle.jsx","pages/AddRecipesPage/components/SectionTitle/SectionTitle.jsx","pages/AddRecipesPage/components/PopularRecipe/PopularRecipe.jsx","pages/AddRecipesPage/components/AddRecipeForm/RecipeDescriptionFields/RecipeDescriptionFields.jsx","pages/AddRecipesPage/components/AddRecipeForm/RecipeIngredientsFields/RecipeIngredientsFields.jsx","pages/AddRecipesPage/components/AddRecipeForm/RecipePreparationFields/RecipePreparationFields.jsx","pages/AddRecipesPage/components/AddRecipeForm/AddRecipeForm.jsx","pages/AddRecipesPage/components/FollowUsSection/FollowUsSection.jsx","pages/AddRecipesPage/AddRecipesPage.jsx","redux/recipes/selectors.js"],"sourcesContent":["const MainPageTitle = ({ title }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n    </>\n  );\n};\n\nexport default MainPageTitle;\n","const SectionTitle = ({ title }) => {\n  return (\n    <>\n      <h3>{title}</h3>\n    </>\n  );\n};\n\nexport default SectionTitle;\n","import { useEffect } from \"react\";\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPopularRecipes } from \"../../../../redux/recipes/operations\";\nimport { selectPopularRecipes } from \"../../../../redux/recipes/selectors\";\nimport { NavLink } from \"react-router-dom\";\n\nconst PopularRecipe = () => {\n  const dispatch = useDispatch();\n  const popularRecipes = useSelector(selectPopularRecipes);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(fetchPopularRecipes());\n    };\n    fetchData();\n  }, [dispatch]);\n\n  console.log(popularRecipes);\n\n  return (\n    <>\n      <SectionTitle title=\"Popular recipe\" />\n      <ul>\n        {popularRecipes ? (\n          popularRecipes.map((recipe) => (\n            <li key={recipe._id}>\n              <NavLink to={`/recipe/${recipe._id}`}>\n                <figure>\n                  <img src={recipe.preview} alt={`${recipe.title}`} />\n                  <figcaption>{`${recipe.title}`}</figcaption>\n                  <figcaption>{`${recipe.description}`}</figcaption>\n                </figure>\n              </NavLink>\n            </li>\n          ))\n        ) : (\n          <></>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default PopularRecipe;\n","import { useSelector } from \"react-redux\";\nimport { selectCategories } from \"../../../../../redux/recipes/selectors\";\n\nconst RecipeDescriptionFields = ({ onChange, description }) => {\n  const categoriesList = useSelector(selectCategories);\n\n  const generateTimeOptions = () => {\n    const options = [];\n    for (let i = 5; i <= 180; i += 5) {\n      options.push(i);\n    }\n    return options;\n  };\n\n  const timeOptionsArray = generateTimeOptions();\n\n  return (\n    <>\n      <input\n        required\n        type=\"file\"\n        name=\"image\"\n        accept=\"image/*\"\n        onChange={onChange}\n      />\n      <input\n        required\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Enter recipe title\"\n        value={description.title}\n        onChange={onChange}\n      />\n      <input\n        required\n        type=\"text\"\n        name=\"about\"\n        placeholder=\"Enter about recipe\"\n        value={description.about}\n        onChange={onChange}\n      />\n      <label htmlFor=\"category\">Category</label>\n      <select\n        required\n        id=\"category\"\n        name=\"category\"\n        value={description.category}\n        onChange={onChange}\n      >\n        {categoriesList.map((category) => (\n          <option key={category.title} value={category.title}>\n            {category.title}\n          </option>\n        ))}\n      </select>\n      <label htmlFor=\"time\">Cooking time</label>\n      <select\n        required\n        id=\"time\"\n        name=\"time\"\n        value={description.time}\n        onChange={onChange}\n      >\n        {timeOptionsArray.map((number) => (\n          <option key={number} value={number}>\n            {number}\n          </option>\n        ))}\n        <option key=\"180+\" value=\"180+\">\n          180+\n        </option>\n      </select>\n    </>\n  );\n};\n\nexport default RecipeDescriptionFields;\n","import SectionTitle from \"../../SectionTitle/SectionTitle\";\nimport { useSelector } from \"react-redux\";\nimport { selectIngredients } from \"../../../../../redux/recipes/selectors\";\nimport AsyncSelect from \"react-select/async\";\nimport Select from \"react-select\";\n\nconst RecipeIngredientsFields = ({ onChange, ingredients }) => {\n  const ingredientsList = useSelector(selectIngredients);\n\n  const sortedIngredients = [...ingredientsList].sort((firstIng, secondIng) =>\n    firstIng.ttl.localeCompare(secondIng.ttl)\n  );\n\n  const ingredientOptions = sortedIngredients.map((ingredient) => ({\n    value: ingredient._id,\n    label: ingredient.ttl,\n  }));\n\n  const measurementOptions = [\n    { value: \"\", label: \"\" },\n    { value: \"tbs\", label: \"tbs\" },\n    { value: \"tsp\", label: \"tsp\" },\n    { value: \"kg\", label: \"kg\" },\n    { value: \"g\", label: \"g\" },\n    { value: \"l\", label: \"l\" },\n    { value: \"ml\", label: \"ml\" },\n  ];\n\n  const handleRemoveField = (index) => {\n    const newIngredients = [...ingredients];\n    if (ingredients.length > 1) {\n      newIngredients.splice(index, 1);\n      onChange(newIngredients);\n    }\n  };\n\n  const handleAddField = () => {\n    onChange([\n      ...ingredients,\n      { id: \"\", name: \"\", measure: \"empty\", amount: \"\" },\n    ]);\n  };\n\n  const handleChange = (index, field, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index][field] = value;\n    onChange(newIngredients);\n  };\n\n  const handleIngredientChange = (index, selectedOption) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index].id = selectedOption ? selectedOption.value : \"\";\n    newIngredients[index].name = selectedOption ? selectedOption.label : \"\";\n    onChange(newIngredients);\n  };\n\n  const filterIngredients = (inputValue) => {\n    return ingredientOptions.filter((i) =>\n      i.label.toLowerCase().includes(inputValue.toLowerCase())\n    );\n  };\n\n  const loadOptions = (inputValue, callback) => {\n    setTimeout(() => {\n      callback(filterIngredients(inputValue));\n    }, 500);\n  };\n\n  return (\n    <>\n      <SectionTitle title=\"Ingredients\" />\n      <button\n        type=\"button\"\n        onClick={() => handleRemoveField(ingredients.length - 1)}\n        disabled={ingredients.length <= 1}\n      >\n        -\n      </button>\n      <span>{ingredients.length}</span>\n      <button type=\"button\" onClick={handleAddField}>\n        +\n      </button>\n      {ingredients.map((ingredient, index) => (\n        <div key={index}>\n          <AsyncSelect\n            required\n            cacheOptions\n            loadOptions={loadOptions}\n            defaultOptions={ingredientOptions}\n            value={ingredientOptions.find(\n              (option) => option.value === ingredient.id\n            )}\n            onChange={(selectedOption) =>\n              handleIngredientChange(index, selectedOption)\n            }\n            placeholder=\"Select ingredient\"\n            isClearable\n          />\n          <input\n            required\n            type=\"text\"\n            placeholder=\"Amount\"\n            value={ingredient.amount}\n            onChange={(e) => handleChange(index, \"amount\", e.target.value)}\n          />\n          <Select\n            required\n            value={measurementOptions.find(\n              (option) => option.value === ingredient.measure\n            )}\n            onChange={(selectedOption) =>\n              handleChange(\n                index,\n                \"measure\",\n                selectedOption ? selectedOption.value : \"empty\"\n              )\n            }\n            options={measurementOptions}\n            placeholder=\"Measure\"\n            isClearable\n          />\n          <button type=\"button\" onClick={() => handleRemoveField(index)}>\n            X\n          </button>\n        </div>\n      ))}\n    </>\n  );\n};\nexport default RecipeIngredientsFields;\n","import SectionTitle from \"../../SectionTitle/SectionTitle\";\n\nconst RecipePreparationFields = ({ onChange, instructions }) => {\n  return (\n    <>\n      <SectionTitle title=\"Recipe Preparation\" />\n      <textarea\n        required\n        name=\"preparation\"\n        rows=\"5\"\n        placeholder=\"Enter recipe\"\n        value={instructions}\n        onChange={onChange}\n      ></textarea>\n    </>\n  );\n};\nexport default RecipePreparationFields;\n","import { useDispatch } from \"react-redux\";\nimport RecipeDescriptionFields from \"./RecipeDescriptionFields/RecipeDescriptionFields\";\nimport RecipeIngredientsFields from \"./RecipeIngredientsFields/RecipeIngredientsFields\";\nimport RecipePreparationFields from \"./RecipePreparationFields/RecipePreparationFields\";\nimport { useState } from \"react\";\nimport { addOwnRecipe } from \"../../../../redux/user/operations\";\n\nconst AddRecipeForm = () => {\n  const dispatch = useDispatch();\n\n  const [description, setDescription] = useState({\n    title: \"\",\n    about: \"\",\n    category: \"\",\n    time: \"\",\n    image: null,\n  });\n\n  const [ingredients, setIngredients] = useState([\n    { id: \"\", name: \"\", measure: \"\", amount: \"\" },\n  ]);\n\n  const [instructions, setInstructions] = useState(\"\");\n\n  const handleDescriptionChange = (e) => {\n    const { name, value, files } = e.target;\n    setDescription((prev) => ({ ...prev, [name]: files ? files[0] : value }));\n  };\n\n  const handleIngredientsChange = (newIngredients) => {\n    setIngredients(newIngredients);\n  };\n\n  const handleInstructionsChange = (e) => {\n    setInstructions(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"title\", description.title);\n    formData.append(\"description\", description.about);\n    formData.append(\"category\", description.category);\n    formData.append(\"time\", description.time);\n    formData.append(\"image\", description.image);\n    formData.append(\"instructions\", instructions);\n\n    ingredients.forEach((ingredient, index) => {\n      formData.append(`ingredients[${index}][id]`, ingredient.id);\n      formData.append(\n        `ingredients[${index}][measure]`,\n        `${ingredient.amount} ${ingredient.measure}`\n      );\n    });\n    console.log(formData);\n    dispatch(addOwnRecipe(formData));\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <RecipeDescriptionFields\n          onChange={handleDescriptionChange}\n          description={description}\n        />\n        <RecipeIngredientsFields\n          onChange={handleIngredientsChange}\n          ingredients={ingredients}\n        />\n        <RecipePreparationFields\n          onChange={handleInstructionsChange}\n          instructions={instructions}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddRecipeForm;\n","import SectionTitle from \"../SectionTitle/SectionTitle\";\nimport FollowUs from \"../../../../components/FollowUs/FollowUs\";\n\nconst FollowUsSection = () => {\n  return (\n    <>\n      <SectionTitle title=\"Follow us\" />\n      <FollowUs />\n    </>\n  );\n};\n\nexport default FollowUsSection;\n","import { Helmet } from \"react-helmet\";\nimport MainPageTitle from \"../../components/MainPageTitle/MainPageTitle\";\nimport PopularRecipe from \"./components/PopularRecipe/PopularRecipe\";\nimport AddRecipeForm from \"./components/AddRecipeForm/AddRecipeForm\";\nimport FollowUsSection from \"./components/FollowUsSection/FollowUsSection\";\nconst AddRecipesPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Add recipe</title>\n      </Helmet>\n      <MainPageTitle title=\"Add recipe\" />\n      <AddRecipeForm />\n      <FollowUsSection />\n      <PopularRecipe />\n    </>\n  );\n};\n\nexport default AddRecipesPage;\n","export const selectCategories = (state) => state.recipes.categories;\nexport const selectRecipesForMainPage = (state) =>\n  state.recipes.mainPageRecipes;\nexport const selectRecipesByCategory = (state) =>\n  state.recipes.recipesByCategory;\nexport const selectIngredients = (state) => state.recipes.ingredients;\nexport const selectPopularRecipes = (state) => state.recipes.popularRecipes;\nexport const selectIsLoading = (state) => state.recipes.isLoading;\nexport const selectRecipeById = (state) => state.recipes.recipeById;\nexport const selectSearchedRecipesByTitle = (state) =>\n  state.recipes.recipesSearchedByTitle;\nexport const selectSearchedRecipesByIngredients = (state) =>\n  state.recipes.recipesSearchedByIngredient;\n"],"names":["_ref","title","_jsx","_Fragment","children","PopularRecipe","dispatch","useDispatch","popularRecipes","useSelector","selectPopularRecipes","useEffect","async","fetchPopularRecipes","fetchData","console","log","_jsxs","SectionTitle","map","recipe","NavLink","to","concat","_id","src","preview","alt","description","onChange","categoriesList","selectCategories","timeOptionsArray","generateTimeOptions","options","i","push","required","type","name","accept","placeholder","value","about","htmlFor","id","category","time","number","ingredients","ingredientOptions","selectIngredients","sort","firstIng","secondIng","ttl","localeCompare","ingredient","label","measurementOptions","handleRemoveField","index","newIngredients","length","splice","handleChange","field","loadOptions","inputValue","callback","setTimeout","filter","toLowerCase","includes","filterIngredients","onClick","disabled","handleAddField","measure","amount","AsyncSelect","cacheOptions","defaultOptions","find","option","selectedOption","handleIngredientChange","isClearable","e","target","Select","instructions","rows","AddRecipeForm","setDescription","useState","image","setIngredients","setInstructions","onSubmit","preventDefault","formData","FormData","append","forEach","addOwnRecipe","RecipeDescriptionFields","files","prev","RecipeIngredientsFields","RecipePreparationFields","FollowUsSection","FollowUs","AddRecipesPage","Helmet","MainPageTitle","state","recipes","categories","selectRecipesForMainPage","mainPageRecipes","selectRecipesByCategory","recipesByCategory","selectIsLoading","isLoading","selectRecipeById","recipeById"],"sourceRoot":""}